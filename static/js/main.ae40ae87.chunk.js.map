{"version":3,"sources":["images/manan.png","images/Netflix.PNG","images/Crypton.PNG","images/Rick.PNG","components/mainLanding/Contacts.js","components/mainLanding/MainLanding.js","components/SkillSection/Skills.js","components/SkillSection/Intrests.js","components/SkillSection/Toolbox.js","components/ProjectSection/Projects.js","components/ProjectSection/Card.js","components/ProjectSection/ProjectSection.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Contacts","style","display","justifyContent","zIndex","href","icon","faGithub","size","color","faGoogle","faLinkedinIn","faFacebookF","MainLanding","className","src","manan","width","Skills","marginTop","Intrests","Toolbox","faHtml5","faCss3","faJs","faSass","faGitAlt","faNodeJs","faReact","Projects","name","image","Netflix","desc","link","Rick","Crypton","Card","props","photo","title","class","ProjectSection","map","project","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ae40ae87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/manan.077ee686.png\";","module.exports = __webpack_public_path__ + \"static/media/Netflix.8de016d0.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Crypton.c05c8161.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Rick.7f487cc2.PNG\";","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faGithub,faGoogle,faLinkedinIn,faFacebookF} from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\n\r\nconst Contacts = ()=>(\r\n\r\n<div style={{display:'flex',justifyContent:'space-around',zIndex:1000}}>\r\n <a href=\"https://github.com/Mananx23\"><FontAwesomeIcon icon={faGithub} size=\"3x\" color=\"white\"  /></a>\r\n <a href=\"https://mail.google.com/mail/u/0/#inbox\"><FontAwesomeIcon icon={faGoogle} size=\"3x\" color=\"white\"  /></a>\r\n <a  href=\"https://www.linkedin.com/in/manan-anand-44b414195/\" ><FontAwesomeIcon icon={faLinkedinIn} size=\"3x\" color=\"white\" href=\"www.linkedin.com/in/manan-anand-44b414195\" /></a>\r\n <a href=\"https://www.facebook.com/manan.anand.50\"><FontAwesomeIcon icon={faFacebookF} size=\"3x\" color=\"white\" /></a>\r\n</div>\r\n\r\n);\r\n\r\nexport default Contacts;  ","import React from 'react'\r\nimport manan from '../../images/manan.png'\r\nimport '../../styles/mainLanding/landing.scss'\r\nimport Contacts from './Contacts'\r\n\r\nconst MainLanding = ()=>(\r\n\r\n    <div className=\"container\">\r\n        <img className=\"main-image\" src={manan}/>\r\n        <hr style={{width:'60vw',}}/>\r\n        <h2 className=\"main-text\" >Hey, I'm Manan Anand. I am a Web Developer based in Delhi. </h2>\r\n        <Contacts/>\r\n\r\n    </div>\r\n);\r\n\r\nexport default MainLanding;\r\n","import React from 'react'\r\nimport '../../styles/Skill/Skills.scss';\r\nconst Skills=() =>(\r\n  \r\n     <div className=\"skill\" style={{marginTop:'80px'}} >\r\n         <h2 style={{color:'white'}} >SKILLS</h2>\r\n         <div className=\"skills-desc\">\r\n         <p>\r\n             C/C++ - HTML5 - CSS3/SASS - JAVASCRIPT/ES6 - NODEJS/EXPRESSJS - MONGODB - REACTJS\r\n         </p>\r\n         </div>\r\n     </div>\r\n \r\n);\r\n\r\nexport default Skills;","import React from 'react'\r\nimport '../../styles/Skill/Intrests.scss';\r\n\r\nconst Intrests = () =>(\r\n    <div className=\"intrest\" style={{marginTop:'80px'}}>\r\n        <h2 style={{color:'white'}}>INTRESTS</h2>\r\n        <div className=\"intrest-desc\">\r\n            <p>\r\n                Programming - Reading - Writing - Travelling - Music\r\n            </p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Intrests;","import React from 'react'\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n import {faHtml5,faCss3,faJs,faSass,faGitAlt,faNodeJs,faReact} from '@fortawesome/free-brands-svg-icons'\r\n import '../../styles/Skill/Toolbox.scss';\r\nimport Skills from './Skills';\r\nimport Intrests from './Intrests';\r\n\r\nconst Toolbox = ()=>(\r\n    <div className=\"toolbox\" style={{marginTop:'80px'}}>\r\n        <h2 style={{color:'white'}} >Toolbox</h2>\r\n        \r\n        <div className=\"tool-icons\">\r\n        <FontAwesomeIcon icon={faHtml5} size=\"3x\" color=\"white\" />\r\n        <FontAwesomeIcon icon={faCss3} size=\"3x\" color=\"white\" />\r\n        <FontAwesomeIcon icon={faJs} size=\"3x\"  color=\"white\"/>\r\n        <FontAwesomeIcon icon={faSass} size=\"3x\" color=\"white\"  />\r\n        <FontAwesomeIcon icon={faGitAlt} size=\"3x\" color=\"white\" />\r\n        <FontAwesomeIcon icon={faNodeJs} size=\"3x\" color=\"white\" />\r\n        <FontAwesomeIcon icon={faReact} size=\"3x\" color=\"white\" />\r\n        </div>\r\n        <Skills/>\r\n        <Intrests/>\r\n    </div>\r\n)\r\n\r\nexport default Toolbox;","import Netflix from '../../images/Netflix.PNG';\r\nimport Crypton from '../../images/Crypton.PNG';\r\nimport Rick from '../../images/Rick.PNG'\r\n\r\nconst Projects = [\r\n    {\r\n        name: 'Netflix Landing Clone',\r\n        image: Netflix,\r\n        desc:'This is a Netflix Landing Page made completely with HTML, CSS and Javascript.',\r\n        link:'https://github.com/Mananx23/Netflix.git'\r\n    },\r\n\r\n    {\r\n        name: 'Rick and Morty Wiki',\r\n        image: Rick,\r\n        desc: 'A fandom wiki website on the popular TV show Rick and Morty. This project is made on ReactJs.',\r\n        link:'https://github.com/Codexharshit2512/rick-and-morty-wiki.git'\r\n    },\r\n\r\n    {\r\n        name:'Crypton',\r\n        image: Crypton,\r\n        desc: 'Crypton is a ML based website that predicts the stocks using past trends',\r\n        link:'https://github.com/Mananx23/CryptoApp.git'\r\n    }\r\n];\r\n\r\nexport default Projects;","import React from 'react'\r\n\r\nimport '../../styles/Project/card.scss';\r\n\r\nconst Card = (props)=>(\r\n\r\n    <div className=\"card\">\r\n    <div className=\"card-image waves-effect waves-block waves-light\">\r\n    <img  className=\"activator\" src={props.photo} />\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <span className=\"card-title activator grey-text \">{props.title}<i class=\"material-icons right\"></i></span>\r\n      <p><a href={props.link}>Github Repo</a></p>\r\n    </div>\r\n    <div className=\"card-reveal\">\r\n      <span className=\"card-title grey-text \">{props.desc}<i class=\"material-icons right\"></i></span>\r\n      <p>{props.desc}</p>\r\n    </div>\r\n  </div>\r\n            \r\n\r\n);\r\n\r\nexport default Card;","import React from 'react'\r\nimport Projects from './Projects';\r\nimport Card from './Card';\r\nimport '../../styles/Project/section.scss';\r\n\r\nconst ProjectSection = () =>(\r\n\r\n   <div className=\"section\">\r\n       <h2>Projects</h2>\r\n       <div className=\"project-cards\">\r\n        {Projects.map(project =>(\r\n             <Card title = {project.name} desc={project.desc} photo={project.image} link={project.link}/>\r\n        ))}\r\n       </div>\r\n   </div>\r\n\r\n);\r\n\r\nexport default ProjectSection;","import React from 'react';\nimport MainLanding from './components/mainLanding/MainLanding';\nimport Contacts from './components/mainLanding/Contacts';\nimport Toolbox from './components/SkillSection/Toolbox';\nimport ProjectSection from './components/ProjectSection/ProjectSection';\nimport Footer from './components/footer/Footer.js';\n\n\nconst App = () =>(\n\n   <div className=\"app\">\n      <MainLanding/>\n      <Toolbox/>\n      <ProjectSection/>\n      {/* <Footer/> */}\n   </div>\n \n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Card from './components/ProjectSection/Card.js'\n\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}